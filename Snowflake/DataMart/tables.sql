create or replace schema DATA_MART COMMENT='Reporting layer';

create or replace TABLE DIM_DATE (
	DATE_ID NUMBER(38,0) NOT NULL,
	DATE DATE,
	YEAR NUMBER(4,0),
	MONTH NUMBER(2,0),
	MONTHNAME VARCHAR(50),
	DAY NUMBER(2,0),
	TYPE VARCHAR(50),
	LOCALE VARCHAR(50),
	LOCALE_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(200),
	TRANSFERRED VARCHAR(20),
	T_TIMESTAMP TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	T_JOB_ID VARCHAR(100),
	constraint PK_DATE_ID primary key (DATE_ID)
);
create or replace TABLE DIM_ITEMS (
	ITEMS_ID NUMBER(38,0) NOT NULL autoincrement,
	ITEM_NBR NUMBER(20,0),
	FAMILY VARCHAR(200),
	CLASS VARCHAR(100),
	PERISHABLE VARCHAR(20),
	T_TIMESTAMP TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	T_JOB_ID VARCHAR(100),
	constraint PK_ITEMS_ID primary key (ITEMS_ID)
);
create or replace TABLE DIM_STORES (
	STORES_ID NUMBER(38,0) NOT NULL autoincrement,
	STORE_NBR NUMBER(10,0),
	CITY VARCHAR(200),
	STATE VARCHAR(200),
	TYPE VARCHAR(10),
	CLUSTER NUMBER(10,1),
	T_TIMESTAMP TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	T_JOB_ID VARCHAR(100),
	constraint PK_STORES_ID primary key (STORES_ID)
);
create or replace TABLE FACT_EVENTS (
	EVENTS_ID NUMBER(38,0) NOT NULL autoincrement,
	SRC_ID NUMBER(38,0),
	DATE_ID NUMBER(38,0),
	STORES_ID NUMBER(38,0),
	ITEMS_ID NUMBER(38,0),
	UNIT_SALES NUMBER(15,5),
	ONPROMOTION VARCHAR(10),
	T_TIMESTAMP TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	T_JOB_ID VARCHAR(100),
	constraint PK_EVENTS_ID primary key (EVENTS_ID),
	constraint FK_DATE_ID foreign key (DATE_ID) references STORE_DB.DATA_MART.DIM_DATE(DATE_ID),
	constraint FK_STORES_ID foreign key (STORES_ID) references STORE_DB.DATA_MART.DIM_STORES(STORES_ID),
	constraint FK_ITEMS_ID foreign key (ITEMS_ID) references STORE_DB.DATA_MART.DIM_ITEMS(ITEMS_ID)
);
create or replace TABLE FACT_TRANSACTIONS (
	TRANSACTIONS_ID NUMBER(38,0) NOT NULL autoincrement,
	DATE_ID NUMBER(38,0),
	STORES_ID NUMBER(38,0),
	TRANSACTIONS NUMBER(15,2),
	T_TIMESTAMP TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	T_JOB_ID VARCHAR(100),
	constraint PK_TRANSACTIONS_ID primary key (TRANSACTIONS_ID),
	constraint FK_STORES_ID foreign key (STORES_ID) references STORE_DB.DATA_MART.DIM_STORES(STORES_ID),
	constraint FK_DATE_ID foreign key (DATE_ID) references STORE_DB.DATA_MART.DIM_DATE(DATE_ID)
);